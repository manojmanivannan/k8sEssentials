apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-web
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.web.replicas }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      role: web
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        role: web
    spec:
      securityContext:
        runAsGroup: 1000
        runAsUser: 1000
      containers:
        - name: {{ .Release.Name }}-web
          image: {{ .Values.web.image }}:{{ .Values.web.tag }}
          env:
          - name: POSTGRES_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: db_root_password
          - name: POSTGRES_USER_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: db_user
          - name: POSTGRES_DB_NAME
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-secrets
                key: db_name
          args:
          {{- range .Values.web.args }}
            - {{ quote . }}
          {{- end }}
          ports:
            - name: gunicorn
              containerPort: 8000
          resources: {{ toYaml .Values.web.resources | nindent 12 }}
          readinessProbe:
            initialDelaySeconds: 10
            httpGet:
              port: gunicorn
              path: /
          livenessProbe:
            initialDelaySeconds: 10
            exec:
              command:
                - /bin/sh
                - -c
                - 'pidof -x gunicorn'

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres
  namespace: {{ .Release.Namespace }}
  labels:
    app: "postgres"
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      app: "postgres"
  template:
    metadata:
      labels:
        app: "postgres"
    spec:
      containers:
      - name: {{ .Release.Name }}-postgres
        image: "postgres:9.6.2"
        env:
        - name: "POSTGRES_DB"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_DB"
              name: {{ .Release.Name }}-postgres-config
        - name: "POSTGRES_USER"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_USER"
              name: {{ .Release.Name }}-postgres-config
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            configMapKeyRef:
              key: "POSTGRES_PASSWORD"
              name: {{ .Release.Name }}-postgres-config
        ports:
          - containerPort: 5432
            name: postgres
        volumeMounts:
          - name: postgres-storage
            mountPath: /var/lib/postgresql/db-data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pv-claim